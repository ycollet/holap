// generated by Fast Light User Interface Designer (fluid) version 1.0110

#ifndef exciter_ui_h
#define exciter_ui_h
#include <FL/Fl.H>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <math.h>
#include "../config.h"
#include <FL/Fl_Shared_Image.H>
#include <FL/Fl_Value_Slider.H>
#include <FL/Fl_Valuator.H>
#include <FL/Fl_Dial.H>
#include <FL/Fl_Box.H>
#include <FL/fl_draw.H>
#include <FL/Fl_File_Chooser.H>
#include <FL/fl_ask.H>
#include <FL/x.H>

class Rueda : public Fl_Dial {
public:
  char theformat[32]; 
  Fl_Shared_Image *img; 
  Fl_Image *temp; 
  Rueda(int x,int y, int w, int h, const char *label=0);
  ~Rueda();
  void draw();
  int handle(int  event);
};

class SliderW : public Fl_Value_Slider {
public:
  SliderW(int x,int y, int w, int h, const char *label=0);
  int handle(int event);
  int handle2(int event, int X, int Y, int W, int H);
  void draw();
};
#include <FL/Fl_Double_Window.H>
#include <FL/Fl_Box.H>

class holharm_ui {
public:
  int D_Vol_c; 
  int D_Pan_c; 
  int D_Dry_c; 
  int D_Mag1_c; 
  int D_Mag2_c; 
  int D_Mag3_c; 
  int D_Mag4_c; 
  int D_Mag5_c; 
  int D_Mag6_c; 
  int D_Mag7_c; 
  int D_Mag8_c; 
  int D_Mag9_c; 
  int D_Mag10_c; 
  int D_Freq_c; 
  int Pexitprogram; 
  int Pexit; 
  holharm_ui();
  Fl_Double_Window* make_window();
  Fl_Double_Window *ui_win;
private:
  void cb_ui_win_i(Fl_Double_Window*, void*);
  static void cb_ui_win(Fl_Double_Window*, void*);
public:
  Fl_Box *d_osc_label;
  Fl_Box *MT;
  Rueda *D_Dry;
private:
  void cb_D_Dry_i(Rueda*, void*);
  static void cb_D_Dry(Rueda*, void*);
public:
  Rueda *D_Vol;
private:
  void cb_D_Vol_i(Rueda*, void*);
  static void cb_D_Vol(Rueda*, void*);
public:
  Rueda *D_Pan;
private:
  void cb_D_Pan_i(Rueda*, void*);
  static void cb_D_Pan(Rueda*, void*);
public:
  Rueda *D_Freq;
private:
  void cb_D_Freq_i(Rueda*, void*);
  static void cb_D_Freq(Rueda*, void*);
public:
  SliderW *D_Mag1;
private:
  void cb_D_Mag1_i(SliderW*, void*);
  static void cb_D_Mag1(SliderW*, void*);
public:
  SliderW *D_Mag2;
private:
  void cb_D_Mag2_i(SliderW*, void*);
  static void cb_D_Mag2(SliderW*, void*);
public:
  SliderW *D_Mag3;
private:
  void cb_D_Mag3_i(SliderW*, void*);
  static void cb_D_Mag3(SliderW*, void*);
public:
  SliderW *D_Mag4;
private:
  void cb_D_Mag4_i(SliderW*, void*);
  static void cb_D_Mag4(SliderW*, void*);
public:
  SliderW *D_Mag5;
private:
  void cb_D_Mag5_i(SliderW*, void*);
  static void cb_D_Mag5(SliderW*, void*);
public:
  SliderW *D_Mag6;
private:
  void cb_D_Mag6_i(SliderW*, void*);
  static void cb_D_Mag6(SliderW*, void*);
public:
  SliderW *D_Mag7;
private:
  void cb_D_Mag7_i(SliderW*, void*);
  static void cb_D_Mag7(SliderW*, void*);
public:
  SliderW *D_Mag8;
private:
  void cb_D_Mag8_i(SliderW*, void*);
  static void cb_D_Mag8(SliderW*, void*);
public:
  SliderW *D_Mag9;
private:
  void cb_D_Mag9_i(SliderW*, void*);
  static void cb_D_Mag9(SliderW*, void*);
public:
  SliderW *D_Mag10;
private:
  void cb_D_Mag10_i(SliderW*, void*);
  static void cb_D_Mag10(SliderW*, void*);
public:
  Fl_Box *ShowChord;
  static void tick(void* v);
};
#endif
